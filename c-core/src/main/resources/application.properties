# 应用名
spring.application.name=CloudOA

#系统变量
#访问后端的路径，如果不没置，则默认为Global.getFullRootPath(SpringUtil.getRequest())，用于富文本编辑器初始化或预览文件，不需要以 / 结尾
sys.web.rootPath=http://localhost:8063/oa
#系统域名，暂无用
sys.web.domainName=
#内置Tomcat所用的部署目录，无需修改
sys.web.docPath=${user.dir}/out/embed
#nginx配置的虚拟路径，注意无需以/结尾
sys.web.publicPath=
#上传文件的磁盘路径，需以/结尾
sys.web.uploadPath=d:/home8.0/
#前端界面中红点提示3天内的未读消息
sys.web.msg.fetchDays=3
#前端基地址，注意以#/结尾
sys.web.frontPath=http://localhost:3100/#/

#缓存是否启用
sys.cache.enabled=true
#Redis或JCS
sys.cache.type=JCS
sys.cache.redis.cluster=false
#Redis服务器地址
sys.cache.redis.host=127.0.0.1
#Redis服务器端口
sys.cache.redis.port=6379
#Redis密码
sys.cache.redis.password=cloudweb
#资源池中最大连接数，默认为8
sys.cache.redis.maxTotal=200
#资源池允许最大空闲的连接数，默认为8
sys.cache.redis.maxIdle=20
#资源池最小空闲连接数或者说初始化连接数，默认为0
sys.cache.redis.minIdle=10
#当资源池连接用尽后，调用者的最大等待时间，单位为毫秒，默认-1
sys.cache.redis.maxWaitMillis=10000
#db序号（0-15）
sys.cache.redis.db=0

#服务器ID
sys.id=3
#是否显示ID
sys.showId=true

#用户信息中的手机号是否必填
sys.user.mobile.required=false
#用户信息中的邮箱是否必填
sys.user.email.required=false
#智能模块前端选项卡标题的最大长度
sys.front.tabTitle.maxLen=10
#异步导出Excel
sys.export.excel.async=true
#前端是否显示悬浮上传面板
sys.front.upload.panel=true
#true采用悬浮按钮 false采用顶栏的按钮
sys.front.upload.panel.btn.suspension=true

#数据库配置，DruidConfig、DruidManager、mybatis-generator将用到
spring.datasource.url=jdbc:mysql://localhost:3311/redmoonoa_free?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&serverTimezone=Asia/Shanghai
#spring.datasource.url=jdbc:mysql://localhost:3311/redmoonoa8_hf?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&serverTimezone=Asia/Shanghai
#spring.datasource.url=jdbc:mysql://47.97.76.49:3310/wxzjxm?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=myoa888
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.column-underline=true

#spring.datasource.type=org.springframework.jdbc.datasource.DriverManagerDataSource
#spring.datasource.driver-class-name=org.logicalcobwebs.proxool.ProxoolDriver
#spring.datasource.url=proxool.oa

##########################  druid配置   ##########################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=200
spring.datasource.KeepAlive=true
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
spring.datasource.validationQuery=SELECT 1
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
# Oracle需关闭下面的两个参数
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.connectionProperties.druid.stat.mergeSql=true
spring.datasource.connectionProperties.druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.stat-view-servlet.deny=192.168.1.1
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=111111

#用于MybatisPlusHotConfig
mybatis-plus.mapper-locations=classpath*:com/cloudweb/oa/mapper/xml/*.xml
mybatis-plus.refresh-mapper=true

#是否在启动后自动打开浏览器，注意外置Tomcat时应置为false
spring.web.autoOpen=false
# chrome或ie
spring.web.browser=ie
spring.web.loginUrl=http://localhost:8888/oa
spring.web.chromePath=C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe

spring.messages.basename=i18n/messages,i18n/common,i18n/ValidationMessages,i18n/flow,i18n/log
spring.message.encoding=UTF-8

#以下为spring自带的logback配置
#指定日志输入级别，如果用TRACE或DEBUG，会使得jcs cache变慢
#logging.level.root=INFO
#logging.level.root=DEBUG
#logging.level.org.springframework.jdbc.datasource.DataSourceTransactionManager=INFO
#logging.level.org.mybatis.spring=INFO

#指定日志输出位置和日志文件名，默认情况下,Spring Boot将日志输出到控制台,不会写到日志文件
#因windows上 javaw -jar 重定向时生成的日志文件会为空，故在windows上需去掉注释，当启用logback-spring.xml后，因下行的设置只能输入至一个文件，故无需再注释
#logging.file=./logs/log.txt
#指定日志输出路径,若file和path同时配置,则file生效
#此配置默认生成文件为spring.log
#logging.path=./logs
#控制台日志输出格式
#-5表示从左显示5个字符宽度
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %boldYellow(%thread) | %boldGreen(%logger) | %msg%n
#文件中输出的格式
#logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} = [%thread] = %-5level = %logger{50} - %msg%n

# 使用自己定制的 logback.xml 配置
logging.config=classpath:logback-spring.xml

# 使用自己定制的 log4j2.xml 配置
#logging.config=classpath:log4j2.xml

# 报表类型，默认值：runquan 表示使用润乾报表，如果不需要启用，则置为空
report.type=

# 是否启用消息队列
mq.isOpen=true
# 所采用的MQ的类型，ActiveMQ、RocketMQ，如果不启用MQ，type可置为其它值，如：none
mq.type=ActiveMQ

#ActiveMQ消息服务器地址
activemq.server=localhost
activemq.port=61616
activemq.user=redmoon
activemq.pwd=redmoon
#本机作为ActiveMQ消息服务器是否启用
activemq.isServerOpen=true
#ActiveMQ消息消费者是否启用
activemq.isConsumerOpen=true

#rocketmq.name-server=http://127.0.0.1:9876
#指定消息发送者的组，在RocketMqConsumer中会用到
#rocketmq.producer.group=queue_group
#rocketmq.producer.send-message-timeout: 6000
#rocketmq.producer.access-key: rocketmq2
#rocketmq.producer.secret-key: 12345678

#会话缓存的大小（每个jms会话类型）,默认为 1
spring.jms.cache.session-cache-size=5

#热部署
spring.devtools.restart.enabled=false

#RestTemplate设置
custom.rest.connection.connection-request-timeout=3000
custom.rest.connection.connect-timeout=3000
custom.rest.connection.read-timeout=3000

#将uploadPath加入spring静态资源访问路径，以便于访问预览文件及用户头像
spring.resources.static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:${sys.web.uploadPath}

#公众号
wechat.appId=wx0000
wechat.appSecret=0000
wechat.url.accessToken=https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=APPID&secret=APPSECRET
wechat.url.apiTicket=https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=ACCESS_TOKEN&type=jsapi

##redis，仅用于spring session，后端可共享会话，如前后端在负载均衡后分别访问不同的机器，则点击”管理“时会因session不存在而重定向至登录页面
#spring.redis.host=127.0.0.1
#spring.redis.port=6379
#spring.redis.password=cloudweb
##默认为0
#spring.redis.database=0
#spring.redis.pool.max-idle=8
#spring.redis.pool.min-idle=0
#spring.redis.pool.max-active=8
#spring.redis.pool.max-wait=-1
#集群配置
#spring.redis.cluster.nodes: 127.0.0.1:6381,127.0.0.1:6382,127.0.0.1:6383,127.0.0.1:6384,127.0.0.1:6385,127.0.0.1:6386
#最大重定向次数
#spring.redis.cluster.max-redirects: 2
#超时一定要大于0
#spring.redis.timeout=3000

#spring session 如果不启用，需在OaApplication中 exclude = RedisAutoConfiguration.class
#否则启动会报：RedisCommandExecutionException: NOAUTH Authentication required

#需置为none，否则会报：SessionRepositoryUnavailableException: No session repository could be auto-configured
#是否将session存到redis none/redis
spring.session.store-type=none
#默认为30分钟，即1800秒
#spring.session.timeout=1200

sys.obj.store.enabled=true
#obs cos oos minio
sys.obj.store.type=obs
#是否通过前台上传
sys.obj.store.front=true
sys.obj.store.endPoint=http://180.1.1.1:90
sys.obj.store.accessKeyId=
sys.obj.store.secretAccessKey=
sys.obj.store.bucketName=obs
#上传时保留本地文件
sys.obj.store.reserveLocalFile=false

#cos
#sys.obj.store.front=false
#sys.obj.store.endPoint=https://bucket-.cos.ap-nanjing.myqcloud.com
#sys.obj.store.accessKeyId=
#sys.obj.store.secretAccessKey=
#sys.obj.store.bucketName=obs
sys.obj.store.appId=
sys.obj.store.region=
